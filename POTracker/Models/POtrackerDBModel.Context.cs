//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace POTracker.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class POTrackerDBEntities : DbContext
    {
        public POTrackerDBEntities()
            : base("name=POTrackerDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AUCreMaster> AUCreMasters { get; set; }
        public virtual DbSet<AUNameAndAddressMaster> AUNameAndAddressMasters { get; set; }
        public virtual DbSet<AUOrderTrackerComment> AUOrderTrackerComments { get; set; }
        public virtual DbSet<AUPurchaseOrder> AUPurchaseOrders { get; set; }
        public virtual DbSet<AUPurchaseOrderDelivery> AUPurchaseOrderDeliveries { get; set; }
        public virtual DbSet<AUPurchaseOrderDeliveryArchive> AUPurchaseOrderDeliveryArchives { get; set; }
        public virtual DbSet<AUPurchaseOrderNote> AUPurchaseOrderNotes { get; set; }
        public virtual DbSet<AUPurchaseOrderNotesArchive> AUPurchaseOrderNotesArchives { get; set; }
        public virtual DbSet<AUStockMaster> AUStockMasters { get; set; }
        public virtual DbSet<CacheRefreshSetting> CacheRefreshSettings { get; set; }
        public virtual DbSet<NZCreMaster> NZCreMasters { get; set; }
        public virtual DbSet<NZNameAndAddressMaster> NZNameAndAddressMasters { get; set; }
        public virtual DbSet<NZOrderTrackerComment> NZOrderTrackerComments { get; set; }
        public virtual DbSet<NZPurchaseOrder> NZPurchaseOrders { get; set; }
        public virtual DbSet<NZPurchaseOrderArchive> NZPurchaseOrderArchives { get; set; }
        public virtual DbSet<NZPurchaseOrderDelivery> NZPurchaseOrderDeliveries { get; set; }
        public virtual DbSet<NZPurchaseOrderDeliveryArchive> NZPurchaseOrderDeliveryArchives { get; set; }
        public virtual DbSet<NZPurchaseOrderNote> NZPurchaseOrderNotes { get; set; }
        public virtual DbSet<NZPurchaseOrderNotesArchive> NZPurchaseOrderNotesArchives { get; set; }
        public virtual DbSet<NZStockMaster> NZStockMasters { get; set; }
        public virtual DbSet<PurchaseOrderBORanking> PurchaseOrderBORankings { get; set; }
        public virtual DbSet<PurchaseOrderStatusDesc> PurchaseOrderStatusDescs { get; set; }
        public virtual DbSet<UKCreMaster> UKCreMasters { get; set; }
        public virtual DbSet<UKNameAndAddressMaster> UKNameAndAddressMasters { get; set; }
        public virtual DbSet<UKOrderTrackerComment> UKOrderTrackerComments { get; set; }
        public virtual DbSet<UKPurchaseOrder> UKPurchaseOrders { get; set; }
        public virtual DbSet<UKPurchaseOrderArchive> UKPurchaseOrderArchives { get; set; }
        public virtual DbSet<UKPurchaseOrderDelivery> UKPurchaseOrderDeliveries { get; set; }
        public virtual DbSet<UKPurchaseOrderDeliveryArchive> UKPurchaseOrderDeliveryArchives { get; set; }
        public virtual DbSet<UKPurchaseOrderNote> UKPurchaseOrderNotes { get; set; }
        public virtual DbSet<UKPurchaseOrderNotesArchive> UKPurchaseOrderNotesArchives { get; set; }
        public virtual DbSet<UKStockMaster> UKStockMasters { get; set; }
        public virtual DbSet<VProductSpecification> VProductSpecifications { get; set; }
        public virtual DbSet<aspnet_Membership> aspnet_Membership { get; set; }
        public virtual DbSet<aspnet_Paths> aspnet_Paths { get; set; }
        public virtual DbSet<aspnet_Users> aspnet_Users { get; set; }
        public virtual DbSet<aspnet_UsersInRoles> aspnet_UsersInRoles { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRoles> AspNetUserRoles { get; set; }
        public virtual DbSet<ManageSupplierLogin> ManageSupplierLogin { get; set; }
        public virtual DbSet<SupplierInspectionRelation> SupplierInspectionRelation { get; set; }
        public virtual DbSet<aspnet_Applications> aspnet_Applications { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<VSupplierByCountry> VSupplierByCountry { get; set; }
        public virtual DbSet<VListOfAllSupplier> VListOfAllSupplier { get; set; }
        public virtual DbSet<AUPurchaseOrderArchive> AUPurchaseOrderArchive { get; set; }
        public virtual DbSet<AUPurchaseOrderLine> AUPurchaseOrderLine { get; set; }
        public virtual DbSet<AUPurchaseOrderLineArchive> AUPurchaseOrderLineArchive { get; set; }
        public virtual DbSet<NZPurchaseOrderLine> NZPurchaseOrderLine { get; set; }
        public virtual DbSet<NZPurchaseOrderLineArchive> NZPurchaseOrderLineArchive { get; set; }
        public virtual DbSet<UKPurchaseOrderLine> UKPurchaseOrderLine { get; set; }
        public virtual DbSet<UKPurchaseOrderLineArchive> UKPurchaseOrderLineArchive { get; set; }
        public virtual DbSet<VNZPurchaseOrderLine> VNZPurchaseOrderLines { get; set; }
        public virtual DbSet<VUKPurchaseOrderLine> VUKPurchaseOrderLines { get; set; }
        public virtual DbSet<VAUPurchaseOrderLine> VAUPurchaseOrderLines { get; set; }
        public virtual DbSet<POApproval> POApprovals { get; set; }
        public virtual DbSet<VAUPurchaseOrderHeader> VAUPurchaseOrderHeaders { get; set; }
        public virtual DbSet<VAUPurchaseOrderLineDetail> VAUPurchaseOrderLineDetails { get; set; }
        public virtual DbSet<VQCPurchaseOrderDetail> VQCPurchaseOrderDetails { get; set; }
        public virtual DbSet<VStockDetailsWithGTINALL> VStockDetailsWithGTINALLs { get; set; }
        public virtual DbSet<VUKPurchaseOrderHeader> VUKPurchaseOrderHeaders { get; set; }
        public virtual DbSet<VUKPurchaseOrderLineDetail> VUKPurchaseOrderLineDetails { get; set; }
        public virtual DbSet<VUKQCPurchaseOrderDetail> VUKQCPurchaseOrderDetails { get; set; }
    
        public virtual int RefreshCreditMasterByCountry(string countryCode)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RefreshCreditMasterByCountry", countryCodeParameter);
        }
    
        public virtual int RefreshPurchaseOrderCache(string countryCode)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RefreshPurchaseOrderCache", countryCodeParameter);
        }
    
        public virtual int RefreshStockMasterByCountry(string countryCode)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RefreshStockMasterByCountry", countryCodeParameter);
        }
    
        public virtual int UpdateValidPurchaseOrderByCountry(string countryCode)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateValidPurchaseOrderByCountry", countryCodeParameter);
        }
    }
}
